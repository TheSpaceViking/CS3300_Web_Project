# Generated by Django 4.2.7 on 2023-11-09 00:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('release_year', models.DateField()),
                ('overall_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='game_covers/')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_genre', models.CharField(choices=[('ACTION', 'Action'), ('ADVENTURE', 'Adventure'), ('EDUCATIONAL', 'Educational'), ('FIGHTING', 'Fighting'), ('HORROR', 'Horror'), ('MOBA', 'MOBA'), ('MUSIC', 'Music'), ('OPEN_WORLD', 'Open World'), ('OTHER', 'Other'), ('PLATFORMER', 'Platformer'), ('PUZZLE', 'Puzzle'), ('RACING', 'Racing'), ('RPG', 'Role-Playing Game'), ('SANDBOX', 'Sandbox'), ('SHOOTER', 'Shooter'), ('SIMULATION', 'Simulation'), ('SPORTS', 'Sports'), ('STEALTH', 'Stealth'), ('STRATEGY', 'Strategy'), ('SURVIVAL', 'Survival')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ATARI_2600', 'Atari 2600'), ('GAMECUBE', 'GameCube'), ('N64', 'Nintendo 64'), ('NDS', 'Nintendo DS'), ('NES', 'Nintendo Entertainment System'), ('GAME_BOY', 'Nintendo Game Boy'), ('GBC', 'Nintendo Game Boy Color'), ('SWITCH', 'Nintendo Switch'), ('NVB', 'Nintendo Virtual Boy'), ('PC', 'PC'), ('PS1', 'PlayStation 1'), ('PS2', 'PlayStation 2'), ('PS3', 'PlayStation 3'), ('PS4', 'PlayStation 4'), ('PS5', 'PlayStation 5'), ('SEGA_DREAMCAST', 'Sega Dreamcast'), ('SEGA_GAME_GEAR', 'Sega Game Gear'), ('SEGA_GENESIS', 'Sega Genesis'), ('SEGA_MASTER_SYSTEM', 'Sega Master System'), ('SEGA_SATURN', 'Sega Saturn'), ('SNES', 'Super Nintendo Entertainment System'), ('WII', 'Wii'), ('WII_U', 'Wii U'), ('XBOX', 'XBOX'), ('XBOX_360', 'Xbox 360'), ('XBOX_ONE', 'Xbox One'), ('XBOX_SERIES_X', 'Xbox Series X')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('website', models.URLField()),
                ('contact', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=200)),
                ('content', models.CharField(max_length=1000)),
                ('overall_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gameReview_app.game')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('gameplay_rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('graphics_rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('sound_rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('story_rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('review', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review_ratings', to='gameReview_app.review')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='genre',
            field=models.ManyToManyField(to='gameReview_app.genre'),
        ),
        migrations.AddField(
            model_name='game',
            name='platforms',
            field=models.ManyToManyField(to='gameReview_app.platform'),
        ),
        migrations.AddField(
            model_name='game',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gameReview_app.publisher'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('user_name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('favorite_genres', models.ManyToManyField(blank=True, to='gameReview_app.genre')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group', verbose_name='Groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission', verbose_name='User Permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
